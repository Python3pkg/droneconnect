# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: helloworld.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='helloworld.proto',
  package='helloworld',
  syntax='proto3',
  serialized_pb=_b('\n\x10helloworld.proto\x12\nhelloworld\"\x06\n\x04Null\"#\n\rUasIdentifier\x12\x12\n\nidentifier\x18\x01 \x01(\x05\"\x13\n\x03Uas\x12\x0c\n\x04mode\x18\x01 \x01(\t\"\x1c\n\x0cHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\nHelloReply\x12\x0f\n\x07message\x18\x01 \x01(\t2\xb1\x01\n\x07Greeter\x12>\n\x08SayHello\x12\x18.helloworld.HelloRequest\x1a\x16.helloworld.HelloReply\"\x00\x12\x36\n\x06getUas\x12\x19.helloworld.UasIdentifier\x1a\x0f.helloworld.Uas\"\x00\x12.\n\x06reboot\x12\x10.helloworld.Null\x1a\x10.helloworld.Null\"\x00\x42\x36\n\x1bio.grpc.examples.helloworldB\x0fHelloWorldProtoP\x01\xa2\x02\x03HLWb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_NULL = _descriptor.Descriptor(
  name='Null',
  full_name='helloworld.Null',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=38,
)


_UASIDENTIFIER = _descriptor.Descriptor(
  name='UasIdentifier',
  full_name='helloworld.UasIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='identifier', full_name='helloworld.UasIdentifier.identifier', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=75,
)


_UAS = _descriptor.Descriptor(
  name='Uas',
  full_name='helloworld.Uas',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='helloworld.Uas.mode', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=77,
  serialized_end=96,
)


_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='helloworld.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='helloworld.HelloRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
  serialized_end=126,
)


_HELLOREPLY = _descriptor.Descriptor(
  name='HelloReply',
  full_name='helloworld.HelloReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='helloworld.HelloReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=157,
)

DESCRIPTOR.message_types_by_name['Null'] = _NULL
DESCRIPTOR.message_types_by_name['UasIdentifier'] = _UASIDENTIFIER
DESCRIPTOR.message_types_by_name['Uas'] = _UAS
DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloReply'] = _HELLOREPLY

Null = _reflection.GeneratedProtocolMessageType('Null', (_message.Message,), dict(
  DESCRIPTOR = _NULL,
  __module__ = 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Null)
  ))
_sym_db.RegisterMessage(Null)

UasIdentifier = _reflection.GeneratedProtocolMessageType('UasIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _UASIDENTIFIER,
  __module__ = 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.UasIdentifier)
  ))
_sym_db.RegisterMessage(UasIdentifier)

Uas = _reflection.GeneratedProtocolMessageType('Uas', (_message.Message,), dict(
  DESCRIPTOR = _UAS,
  __module__ = 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Uas)
  ))
_sym_db.RegisterMessage(Uas)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

HelloReply = _reflection.GeneratedProtocolMessageType('HelloReply', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREPLY,
  __module__ = 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.HelloReply)
  ))
_sym_db.RegisterMessage(HelloReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\033io.grpc.examples.helloworldB\017HelloWorldProtoP\001\242\002\003HLW'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class GreeterStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/helloworld.Greeter/SayHello',
        request_serializer=HelloRequest.SerializeToString,
        response_deserializer=HelloReply.FromString,
        )
    self.getUas = channel.unary_unary(
        '/helloworld.Greeter/getUas',
        request_serializer=UasIdentifier.SerializeToString,
        response_deserializer=Uas.FromString,
        )
    self.reboot = channel.unary_unary(
        '/helloworld.Greeter/reboot',
        request_serializer=Null.SerializeToString,
        response_deserializer=Null.FromString,
        )


class GreeterServicer(object):
  """The greeting service definition.
  """

  def SayHello(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getUas(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def reboot(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=HelloRequest.FromString,
          response_serializer=HelloReply.SerializeToString,
      ),
      'getUas': grpc.unary_unary_rpc_method_handler(
          servicer.getUas,
          request_deserializer=UasIdentifier.FromString,
          response_serializer=Uas.SerializeToString,
      ),
      'reboot': grpc.unary_unary_rpc_method_handler(
          servicer.reboot,
          request_deserializer=Null.FromString,
          response_serializer=Null.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'helloworld.Greeter', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaGreeterServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  """The greeting service definition.
  """
  def SayHello(self, request, context):
    """Sends a greeting
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def getUas(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def reboot(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaGreeterStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  """The greeting service definition.
  """
  def SayHello(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Sends a greeting
    """
    raise NotImplementedError()
  SayHello.future = None
  def getUas(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  getUas.future = None
  def reboot(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  reboot.future = None


def beta_create_Greeter_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('helloworld.Greeter', 'SayHello'): HelloRequest.FromString,
    ('helloworld.Greeter', 'getUas'): UasIdentifier.FromString,
    ('helloworld.Greeter', 'reboot'): Null.FromString,
  }
  response_serializers = {
    ('helloworld.Greeter', 'SayHello'): HelloReply.SerializeToString,
    ('helloworld.Greeter', 'getUas'): Uas.SerializeToString,
    ('helloworld.Greeter', 'reboot'): Null.SerializeToString,
  }
  method_implementations = {
    ('helloworld.Greeter', 'SayHello'): face_utilities.unary_unary_inline(servicer.SayHello),
    ('helloworld.Greeter', 'getUas'): face_utilities.unary_unary_inline(servicer.getUas),
    ('helloworld.Greeter', 'reboot'): face_utilities.unary_unary_inline(servicer.reboot),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Greeter_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('helloworld.Greeter', 'SayHello'): HelloRequest.SerializeToString,
    ('helloworld.Greeter', 'getUas'): UasIdentifier.SerializeToString,
    ('helloworld.Greeter', 'reboot'): Null.SerializeToString,
  }
  response_deserializers = {
    ('helloworld.Greeter', 'SayHello'): HelloReply.FromString,
    ('helloworld.Greeter', 'getUas'): Uas.FromString,
    ('helloworld.Greeter', 'reboot'): Null.FromString,
  }
  cardinalities = {
    'SayHello': cardinality.Cardinality.UNARY_UNARY,
    'getUas': cardinality.Cardinality.UNARY_UNARY,
    'reboot': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'helloworld.Greeter', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
